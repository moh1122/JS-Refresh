<!-- One-time safe init (runs once per full page load) -->
<script>
(function () {
  if (window.__ciBodyInitOnce) return;
  window.__ciBodyInitOnce = true;

  function safe(fn) {
    try { typeof fn === "function" && fn(); } catch (e) { console.warn(e); }
  }

  function run() {
    // IMPORTANT: this is what wires up the player + transcript
    safe(function () {
      if (window.ci_youtube_player && typeof ci_youtube_player.init === "function") {
        ci_youtube_player.init();
      }
    });

    // keep your other page initializers
    safe(window.enablePgAnswer);
    safe(window.enableResize);
    safe(window.enableChallengeAnswer);
    safe(window.enableAnswerToggle);
  }

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", run, { once: true });
  } else {
    run();
  }
})();
</script>

<!-- First-video heal (your V3) + post-init so transcripts attach after heal -->
<script>
(function () {
  if (window.__ciFirstVideoFixV3p) return;
  window.__ciFirstVideoFixV3p = true;

  try { history.scrollRestoration = "manual"; } catch (e) {}

  const POLL_MS = 60;
  const MAX_TRIES = 12;
  const MIN_OK_H = 140;

  function firstVideoEl() {
    return document.querySelector(
      "#player-container-1 .video-js," +
      ".ci-youtube-player .video-js," +
      "#centreColumn .video-js," +
      ".materialStyle .video-js," +
      ".course-content .video-js," +
      ".max_user_content_width .video-js"
    );
  }

  function refreshLayout(v) {
    if (!v) return;
    v.classList.add("vjs-fluid");
    v.style.width = "100%";
    v.style.maxWidth = "100%";
    v.removeAttribute("height");

    const wrap = v.closest(".player-wrapper, .ci-youtube-player, #player-container-1");
    if (wrap) wrap.style.removeProperty("height");

    if (window.videojs && typeof videojs.getAllPlayers === "function") {
      try {
        videojs.getAllPlayers().forEach((p) => {
          try { p.resize && p.resize(); } catch (e) {}
          try { p.trigger && p.trigger("playerresize"); } catch (e) {}
        });
      } catch (e) {}
    }

    setTimeout(() => window.dispatchEvent(new Event("resize")), 40);
    setTimeout(() => window.dispatchEvent(new Event("resize")), 200);
  }

  function needsRebuild(v) {
    if (!v) return false;
    const noIframe = !v.querySelector("iframe");
    const tooSmall = v.clientHeight && v.clientHeight < MIN_OK_H;
    return noIframe || tooSmall;
  }

  // Re-run transcript/player bindings exactly once after heal or attach
  let ranPostInit = false;
  function postInitFor(wrapper) {
    if (ranPostInit) return;
    ranPostInit = true;
    try {
      // If you have a dedicated transcript refresh, call it here:
      // if (window.ci_transcripts && typeof ci_transcripts.refresh === "function") {
      //   ci_transcripts.refresh(wrapper);
      //   return;
      // }

      // Fallback: your player init wires the transcript listeners too
      if (window.ci_youtube_player && typeof ci_youtube_player.init === "function") {
        ci_youtube_player.init();
      }
    } catch (e) {
      console.warn(e);
    }
  }

  function rebuildOnce(v) {
    if (!v || !window.videojs) return;

    const vid = v.getAttribute("data-video-id") || v.dataset.videoId;
    if (!vid) return;

    const wrap =
      v.closest(".player-wrapper, .ci-youtube-player, #player-container-1") || v.parentNode;

    if (!v.id) v.id = "ci_vjs_" + Date.now();

    try {
      const existing = (videojs.getPlayer ? videojs.getPlayer(v.id) :
        (videojs.players && videojs.players[v.id]));
      if (existing) existing.dispose();
    } catch (e) {}

    const clone = v.cloneNode(true);
    v.parentNode.replaceChild(clone, v);

    clone.classList.add("video-js", "vjs-default-skin", "vjs-fluid");
    clone.style.width = "100%";
    clone.style.maxWidth = "100%";
    clone.removeAttribute("height");
    clone.setAttribute("data-video-id", vid);

    try {
      videojs(clone, {
        techOrder: ["youtube"],
        sources: [{ type: "video/youtube", src: "https://www.youtube.com/watch?v=" + vid }]
      });
    } catch (e) {}

    setTimeout(() => {
      refreshLayout(clone);
      postInitFor(wrap); // ensure transcript binds to the repaired player
    }, 80);
  }

  function whenPlayerReadyThenHeal() {
    let tries = 0;
    (function tick() {
      const v = firstVideoEl();
      const attached = v && (
        v.querySelector("iframe, .vjs-tech, video") ||
        (window.videojs && typeof videojs.getAllPlayers === "function" && videojs.getAllPlayers().length)
      );

      if (attached || tries >= MAX_TRIES) {
        const node = v || firstVideoEl();
        refreshLayout(node);
        setTimeout(() => {
          if (needsRebuild(node)) {
            rebuildOnce(node);
          } else {
            const wrap = node && node.closest(".player-wrapper, .ci-youtube-player, #player-container-1");
            postInitFor(wrap); // make sure transcript hooks attach even without rebuild
          }
        }, 120);
      } else {
        tries++;
        setTimeout(tick, POLL_MS);
      }
    })();
  }

  function firstBlockLooksLikeVideo() {
    const content = document.querySelector(".materialStyle, .course-content, .max_user_content_width");
    if (!content) return false;
    const fc = content.firstElementChild;
    return !!(fc && (fc.matches(".video-js, .ci-youtube-player, .player-wrapper") || fc.querySelector(".video-js")));
  }

  function onArrival() {
    const flagged = (function () {
      try { return sessionStorage.getItem("ci_fix_first_video") === "1"; }
      catch (e) { return false; }
    })();

    if (flagged || firstBlockLooksLikeVideo()) {
      try { sessionStorage.removeItem("ci_fix_first_video"); } catch (e) {}
      window.scrollTo(0, 0);
      whenPlayerReadyThenHeal();
    }
  }

  if (document.readyState === "complete") {
    onArrival();
  } else {
    window.addEventListener("load", onArrival, { once: true });
  }

  window.addEventListener("pageshow", function (e) {
    if (e.persisted) setTimeout(onArrival, 40);
  });
})();
</script>
